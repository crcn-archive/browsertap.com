// Generated by CoffeeScript 1.7.0
(function() {
  var HtmlDecor, type,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  type = require("type-component");

  HtmlDecor = (function(_super) {
    __extends(HtmlDecor, _super);

    function HtmlDecor() {
      return HtmlDecor.__super__.constructor.apply(this, arguments);
    }


    /*
     */

    HtmlDecor.prototype._onChange = function(value, oldValue) {
      var dom, node;
      if (oldValue != null) {
        if (typeof oldValue.remove === "function") {
          oldValue.remove();
        }
      }
      if (!value) {
        return this.section.removeAll();
      }
      if (value.render != null) {
        value.remove();
        node = value.render();
      } else if (value.nodeType != null) {
        node = value;
      } else {
        if (this.nodeFactory.name === "string") {
          node = this.nodeFactory.createTextNode(String(value));
        } else {
          dom = this.nodeFactory.createElement("div");
          dom.innerHTML = String(value);
          node = this.nodeFactory.createFragment(dom.childNodes);
        }
      }
      return this.section.replaceChildNodes(node);
    };


    /*
     */

    HtmlDecor.prototype.unbind = function() {
      HtmlDecor.__super__.unbind.call(this);
      return this._onChange(void 0, this.value);
    };

    return HtmlDecor;

  })(require("./base"));

  module.exports = HtmlDecor;

}).call(this);
