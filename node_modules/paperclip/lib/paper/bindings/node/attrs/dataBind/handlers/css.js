// Generated by CoffeeScript 1.7.0
(function() {
  var CssAttrBinding,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CssAttrBinding = (function(_super) {
    __extends(CssAttrBinding, _super);

    function CssAttrBinding() {
      return CssAttrBinding.__super__.constructor.apply(this, arguments);
    }


    /*
     */

    CssAttrBinding.prototype._onChange = function(classes) {
      var className, classNames, classNamesArray, classesToUse, i, useClass, _i, _len, _ref;
      classesToUse = ((_ref = this.node.getAttribute("class")) != null ? _ref.split(" ") : void 0) || [];
      for (classNames in classes) {
        useClass = classes[classNames];
        classNamesArray = classNames.split(/,\s*/);
        for (_i = 0, _len = classNamesArray.length; _i < _len; _i++) {
          className = classNamesArray[_i];
          i = classesToUse.indexOf(className);
          if (useClass) {
            if (!~i) {
              classesToUse.push(className);
            }
          } else if (~i) {
            classesToUse.splice(i, 1);
          }
        }
      }
      return this.node.setAttribute("class", classesToUse.join(" "));
    };

    return CssAttrBinding;

  })(require("./base"));

  module.exports = CssAttrBinding;

}).call(this);
