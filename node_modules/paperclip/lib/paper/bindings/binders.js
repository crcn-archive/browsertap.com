// Generated by CoffeeScript 1.7.0
(function() {
  var BaseBinding, BindingCollection, Collection,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseBinding = require("./base/index");

  BindingCollection = require("./collection");

  Collection = (function(_super) {
    __extends(Collection, _super);


    /*
     */

    function Collection(node, _source) {
      this.node = node;
      this._source = _source != null ? _source : [];
    }


    /*
     */

    Collection.prototype.push = function() {
      var _ref;
      return (_ref = this._source).push.apply(_ref, arguments);
    };


    /*
     */

    Collection.prototype.getBindings = function(node) {
      var binder, bindings, _i, _len, _ref;
      if (this._source.length === 1) {
        return this._source[0].getBinding(node);
      }
      bindings = new BindingCollection();
      _ref = this._source;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        binder = _ref[_i];
        bindings.push(binder.getBinding(node));
      }
      return bindings;
    };


    /*
     */

    Collection.prototype.init = function() {
      var binder, _i, _len, _ref, _results;
      _ref = this._source;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        binder = _ref[_i];
        _results.push(binder.init());
      }
      return _results;
    };

    return Collection;

  })(BaseBinding);

  module.exports = Collection;

}).call(this);
