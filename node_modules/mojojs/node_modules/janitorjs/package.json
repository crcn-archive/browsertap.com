{
  "name": "janitorjs",
  "version": "0.0.4",
  "description": "janitor.js ==========",
  "main": "./lib/index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/classdojo/janitor.js.git"
  },
  "author": "",
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/classdojo/janitor.js/issues"
  },
  "dependencies": {
    "protoclass": "0.0.x",
    "type-component": "0.0.1"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "mocha": "~1.15.0"
  },
  "readme": "Janitor.js is a simple utility that helps cleanup objects. [![Alt ci](https://travis-ci.org/classdojo/janitor.js.png)](https://travis-ci.org/classdojo/janitor.js)\n\n### installation\n\nVia NPM:\n\n```bash\nnpm install janitorjs\n```\n\nVia Bower:\n\n```bash\nbower install janitor\n```\n\n### API\n\n#### janitor()\n\nCreates a new janitor\n\n#### janitor.add(fnOrDisposable)\n\nadds a disposable item to be cleaned up later.\n\n```javascript\n\n// function\njanitor.add(function() {\n  \n});\n\n\n// *or* object with .dispose() method\njanitor.add({\n  dispose: function() {\n\n  }\n});\n```\n\n#### janitor.addTimeout(timer)\n\nadds a timeout object\n\n```javascript\njanitor.addTimeout(setTimeout(function() {\n  \n}, 1000));\n```\n\n#### janitor.addInterval(timer)\n\nadds an interval object\n\n```javascript\njanitor.addInterval(setInterval(function() {\n  \n}, 100));\n```\n\n#### janitor.dispose()\n\n```javascript\njanitor.add(function() { });\njanitor.addInterval(setInterval(functon(){}, 100));\n\n//call the first fn, and dispose the interval\njanitor.dispose();\n```\n",
  "readmeFilename": "README.md",
  "_id": "janitorjs@0.0.4",
  "_from": "janitorjs@0.0.4"
}
